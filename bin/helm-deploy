#!/bin/bash

set -eo pipefail

. k8s-read-config
. k8s-deploy-secrets

HELM_DEFAULT_TIMEOUT=300

format_multiple_values_files() {
  values_files="$1"
  formatted_files=""
  echo "${values_files}" | sed -n 1'p' | tr ',' '\n' | ( while read file_name; do
    file="./deploy/${file_name}.values.yml,"
    formatted_files="$formatted_files$file"
  done
  echo $formatted_files )
}

# shellcheck disable=SC2086
if [[ ! $(kubectl get namespace $NAMESPACE) ]]; then
  echo "Creating ${NAMESPACE} namespace"
  # shellcheck disable=SC2086
  kubectl create namespace $NAMESPACE;
fi

echo "Deploying Helm Charts"
for index in "${!HELM_CHARTS[@]}"
do

  CHART_PATH=${HELM_CHARTS[$index]}
  CHART_RELEASE_NAME=${HELM_RELEASE_NAMES[$index]:-$CHARTS[$index]}
  CHART_VALUES=${HELM_VALUES[$index]}

  # if there is more than one values files listed
  # then pass all values file to helm upgrade command
  if [[ "${CHART_VALUES}" = *","* ]]; then
    CHART_VALUES=$(format_multiple_values_files "${CHART_VALUES}")
  else:
    CHART_VALUES="./deploy/${CHART_VALUES}.values.yml"
  fi

  echo "Applying ${CHART_PATH} with ${CHART_VALUES}"
  helm upgrade --install "${CHART_RELEASE_NAME}" "./deploy/${CHART_PATH}" -f "${CHART_VALUES}" --set image.tag="${CI_SHA1}" --namespace="${NAMESPACE}" --wait --timeout "${HELM_TIMEOUTS[$index]:-$HELM_DEFAULT_TIMEOUT}"

done
echo "Done deploying Helm Charts"
echo ""
